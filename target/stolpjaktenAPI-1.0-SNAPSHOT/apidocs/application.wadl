<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<?enunciate-assumed-base-uri ./?>
<wadl:application xmlns:wadl="http://wadl.dev.java.net/2009/02" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <wadl:doc xmlns:enunciate="http://enunciate.webcohesion.com/" enunciate:generatedBy="Enunciate-2.0"/>
  
  <wadl:grammars>
  </wadl:grammars>

  <wadl:resources base="./">

    <wadl:resource path="configurations">
      <wadl:method name="GET">
        <wadl:doc><![CDATA[]]></wadl:doc>
        <wadl:response>
          <wadl:doc><![CDATA[]]></wadl:doc>
          <wadl:representation mediaType="application/json"/>
        </wadl:response>
      </wadl:method>
    </wadl:resource>

    <wadl:resource path="users">
      <wadl:method name="POST">
        <wadl:doc><![CDATA[Create a new User.
<br>
After creating a user you should proceed to get a token using the Token
REST service. After you have retrieved a token you can use that to access
the other APIs to explore arrangements, maps, courses and start register
poles.
<br>
<b>Authentication:</b> None]]></wadl:doc>
        <wadl:request>
          <wadl:doc><![CDATA[The user to create.]]></wadl:doc>
          <wadl:representation mediaType="application/json">
          </wadl:representation>
        </wadl:request>
      </wadl:method>
    </wadl:resource>

    <wadl:resource path="users">
      <wadl:method name="GET">
        <wadl:doc><![CDATA[]]></wadl:doc>
        <wadl:response>
          <wadl:doc><![CDATA[]]></wadl:doc>
          <wadl:representation mediaType="application/json"/>
        </wadl:response>
      </wadl:method>
    </wadl:resource>

    <wadl:resource path="configurations/{key}">
      <wadl:method name="GET">
        <wadl:doc><![CDATA[Get]]></wadl:doc>
        <wadl:request>
        </wadl:request>
        <wadl:response>
          <wadl:doc><![CDATA[]]></wadl:doc>
          <wadl:representation mediaType="application/json"/>
        </wadl:response>
      </wadl:method>
      <wadl:param name="key" style="template">
        <wadl:doc><![CDATA[]]></wadl:doc>
      </wadl:param>
    </wadl:resource>

    <wadl:resource path="configurations/{key}">
      <wadl:method name="PUT">
        <wadl:doc><![CDATA[]]></wadl:doc>
        <wadl:request>
          <wadl:representation mediaType="application/json">
          </wadl:representation>
        </wadl:request>
      </wadl:method>
      <wadl:param name="key" style="template">
        <wadl:doc><![CDATA[]]></wadl:doc>
      </wadl:param>
    </wadl:resource>

    <wadl:resource path="users/count">
      <wadl:method name="GET">
        <wadl:doc><![CDATA[]]></wadl:doc>
      </wadl:method>
    </wadl:resource>

    <wadl:resource path="users/{userName}">
      <wadl:method name="PUT">
        <wadl:doc><![CDATA[Update the user.
<br>
<b>Authentication:</b> Token (RFC 6750)]]></wadl:doc>
        <wadl:request>
          <wadl:doc><![CDATA[New User configuration, note that you cannot change the
userName.]]></wadl:doc>
          <wadl:representation mediaType="application/json">
          </wadl:representation>
        </wadl:request>
      </wadl:method>
      <wadl:param name="userName" style="template">
        <wadl:doc><![CDATA[Username User to update.]]></wadl:doc>
      </wadl:param>
    </wadl:resource>

    <wadl:resource path="users/{userName}">
      <wadl:method name="DELETE">
        <wadl:doc><![CDATA[Delete a user account.
<br>
Please note that this will delete the user account and all data
associated to it. Anonymous statistics data will remain.]]></wadl:doc>
        <wadl:request>
        </wadl:request>
      </wadl:method>
      <wadl:param name="userName" style="template">
        <wadl:doc><![CDATA[]]></wadl:doc>
      </wadl:param>
    </wadl:resource>

    <wadl:resource path="users/{userName}">
      <wadl:method name="GET">
        <wadl:doc><![CDATA[Retrieve a User.
<br>]]></wadl:doc>
        <wadl:request>
        </wadl:request>
        <wadl:response status="400">
          <wadl:doc><![CDATA[Invalid request]]></wadl:doc>
          <wadl:representation mediaType="application/json"/>
        </wadl:response>
        <wadl:response status="401">
          <wadl:doc><![CDATA[Invalid request]]></wadl:doc>
          <wadl:representation mediaType="application/json"/>
        </wadl:response>
        <wadl:response status="403">
          <wadl:doc><![CDATA[Invalid request]]></wadl:doc>
          <wadl:representation mediaType="application/json"/>
        </wadl:response>
        <wadl:response status="404">
          <wadl:doc><![CDATA[Invalid request]]></wadl:doc>
          <wadl:representation mediaType="application/json"/>
        </wadl:response>
        <wadl:response status="500">
          <wadl:doc><![CDATA[Invalid request]]></wadl:doc>
          <wadl:representation mediaType="application/json"/>
        </wadl:response>
        <wadl:response status="200">
          <wadl:doc><![CDATA[User if found.]]></wadl:doc>
          <wadl:representation mediaType="application/json"/>
        </wadl:response>
      </wadl:method>
      <wadl:param name="userName" style="template">
        <wadl:doc><![CDATA[The user to retrieve.]]></wadl:doc>
      </wadl:param>
    </wadl:resource>

    <wadl:resource path="users/{from}/{to}">
      <wadl:method name="GET">
        <wadl:doc><![CDATA[]]></wadl:doc>
        <wadl:request>
        </wadl:request>
        <wadl:response>
          <wadl:doc><![CDATA[]]></wadl:doc>
          <wadl:representation mediaType="application/json"/>
        </wadl:response>
      </wadl:method>
      <wadl:param name="from" style="template">
        <wadl:doc><![CDATA[]]></wadl:doc>
      </wadl:param>
      <wadl:param name="to" style="template">
        <wadl:doc><![CDATA[]]></wadl:doc>
      </wadl:param>
    </wadl:resource>

    <wadl:resource path="users/{userId}/roles">
      <wadl:method name="GET">
        <wadl:doc><![CDATA[]]></wadl:doc>
        <wadl:request>
        </wadl:request>
        <wadl:response>
          <wadl:doc><![CDATA[]]></wadl:doc>
          <wadl:representation mediaType="application/json"/>
        </wadl:response>
      </wadl:method>
      <wadl:param name="userId" style="template">
        <wadl:doc><![CDATA[]]></wadl:doc>
      </wadl:param>
    </wadl:resource>

    <wadl:resource path="users/{userId}/tokens">
      <wadl:method name="POST">
        <wadl:doc><![CDATA[Create a token to use for subsequent requests to this API.
<br>
If you do not have a user yet, please create one using the Users REST
facade (POST).
<br>
The retrieved token SHOULD be stored by API client implementations.
<br>
Client implementations <b>MUST NOT</b> store the user username and
password.
<br>
An API client can retrieve as many tokens as it likes, but server might
discard old tokens to manage memory resources.
<br>
<br>
<b>Authentication:</b> Basic Authentication (RFC 7617)]]></wadl:doc>
        <wadl:request>
          <wadl:representation mediaType="application/json">
          </wadl:representation>
        </wadl:request>
        <wadl:response>
          <wadl:doc><![CDATA[]]></wadl:doc>
          <wadl:representation mediaType="application/json"/>
        </wadl:response>
      </wadl:method>
      <wadl:param name="userId" style="template">
        <wadl:doc><![CDATA[]]></wadl:doc>
      </wadl:param>
    </wadl:resource>

    <wadl:resource path="users/{userId}/tokens">
      <wadl:method name="DELETE">
        <wadl:doc><![CDATA[Delete a previously created token.]]></wadl:doc>
        <wadl:request>
        </wadl:request>
      </wadl:method>
      <wadl:param name="userId" style="template">
        <wadl:doc><![CDATA[]]></wadl:doc>
      </wadl:param>
    </wadl:resource>

    <wadl:resource path="users/{userId}/roles/{role}">
      <wadl:method name="PUT">
        <wadl:doc><![CDATA[]]></wadl:doc>
        <wadl:request>
        </wadl:request>
      </wadl:method>
      <wadl:param name="userId" style="template">
        <wadl:doc><![CDATA[]]></wadl:doc>
      </wadl:param>
    </wadl:resource>

    <wadl:resource path="users/{userId}/roles/{role}">
      <wadl:method name="GET">
        <wadl:doc><![CDATA[]]></wadl:doc>
        <wadl:request>
        </wadl:request>
        <wadl:response>
          <wadl:doc><![CDATA[]]></wadl:doc>
          <wadl:representation mediaType="application/json"/>
        </wadl:response>
      </wadl:method>
      <wadl:param name="role" style="template">
        <wadl:doc><![CDATA[]]></wadl:doc>
      </wadl:param>
      <wadl:param name="userId" style="template">
        <wadl:doc><![CDATA[]]></wadl:doc>
      </wadl:param>
    </wadl:resource>

    <wadl:resource path="users/{userId}/tokens/{token-id}">
      <wadl:method name="DELETE">
        <wadl:doc><![CDATA[Delete a previously created token.]]></wadl:doc>
        <wadl:request>
        </wadl:request>
      </wadl:method>
      <wadl:param name="token-id" style="template">
        <wadl:doc><![CDATA[The access token to delete, eg
8758f65a-c27b-4f86-a43d-3ce1add36ec6
<br>
<b>Authentication:</b> Bearer Token]]></wadl:doc>
      </wadl:param>
      <wadl:param name="userId" style="template">
        <wadl:doc><![CDATA[]]></wadl:doc>
      </wadl:param>
    </wadl:resource>
  </wadl:resources>
</wadl:application>
