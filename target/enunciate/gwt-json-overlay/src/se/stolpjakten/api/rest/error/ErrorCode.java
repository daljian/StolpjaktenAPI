/**
 * 
 *
 * Generated by <a href="http://enunciate.webcohesion.com">Enunciate</a>.
 */
package se.stolpjakten.api.rest.error;

/**
 * 
 *  Enumeration of error codes that can occur in BadRequest responses.
 */
public enum ErrorCode {

  /**
   *  JSON is not syntactically  correct.
   *  <br>
   *  Please make sure to use JSON lib to create your payload.
   */
  JSON_SYNTAX,

  /**
   *  JSON is not semantically correct.
   *  <br>
   *  Please consult API documentation to assert you follow the correct format.
   */
  JSON_SEMATIC,

  /**
   *  JSON field "userName" is not correct.
   *  <br>
   *  Please consult Configuration setting: USERNAME_PATTERN 
   */
  JSON_FIELD_USERNAME,

  /**
   *  JSON field "email" is not correct.
   *  <br>
   *  Email address must pass validation by javax.mail.internet.InternetAddress
   */
  JSON_FIELD_EMAIL,

  /**
   *  JSON field "password" is not correct.
   *  <br>
   *  Please consult Configuration setting: PASSWORD_PATTERN 
   */
  JSON_FIELD_PASSWORD,

  /**
   *  Can not create resource, because it already exists.
   *  <br>
   *  POST another resource or use PUT to edit existing resource.
   */
  RESOURCE_EXISTS,

  /**
   *  Requested resource was not found.
   *  <br>
   *  Could not find requested resource, maybe you want to POST to create it?
   */
  RESOURCE_NOT_EXISTS;

  public static ErrorCode fromString(String value) {
    if (value == null) {
      return null;
    }
    if ("JSON_SYNTAX".equals(value)) {
      return ErrorCode.JSON_SYNTAX;
    }
    if ("JSON_SEMATIC".equals(value)) {
      return ErrorCode.JSON_SEMATIC;
    }
    if ("JSON_FIELD_USERNAME".equals(value)) {
      return ErrorCode.JSON_FIELD_USERNAME;
    }
    if ("JSON_FIELD_EMAIL".equals(value)) {
      return ErrorCode.JSON_FIELD_EMAIL;
    }
    if ("JSON_FIELD_PASSWORD".equals(value)) {
      return ErrorCode.JSON_FIELD_PASSWORD;
    }
    if ("RESOURCE_EXISTS".equals(value)) {
      return ErrorCode.RESOURCE_EXISTS;
    }
    if ("RESOURCE_NOT_EXISTS".equals(value)) {
      return ErrorCode.RESOURCE_NOT_EXISTS;
    }

    throw new IllegalArgumentException("Illegal enum value: " + value);
  }

  public String toString() {
    switch(this) {
      case JSON_SYNTAX:
        return "JSON_SYNTAX";
      case JSON_SEMATIC:
        return "JSON_SEMATIC";
      case JSON_FIELD_USERNAME:
        return "JSON_FIELD_USERNAME";
      case JSON_FIELD_EMAIL:
        return "JSON_FIELD_EMAIL";
      case JSON_FIELD_PASSWORD:
        return "JSON_FIELD_PASSWORD";
      case RESOURCE_EXISTS:
        return "RESOURCE_EXISTS";
      case RESOURCE_NOT_EXISTS:
        return "RESOURCE_NOT_EXISTS";
      default:
        throw new IllegalStateException();
    }
  }
}
