{
  "swagger": "2.0",
  "info" : {
    "description" : "<h1>stolpjaktenAPI<\/h1>",
    "version" : "1.0-SNAPSHOT",
    "title" : "stolpjaktenAPI"
  },
  "schemes" : [],
  "tags" : [
    {
      "name" : "TokenFacadeREST"
    }
    ,
    {
      "name" : "UsersFacadeREST"
    }
  ],
  "definitions" : {
    "json_Token" : {
      "type" : "object",
      "title" : "Token",
          "properties" : {
            "accessToken" : {
            "readOnly" : false,
"description" : "The Bearer access token to be used for token protected endpoints.\n<br><br>\nSample value:\n<br>\n5eb19a75-c1d2-4d57-b1ec-4c61ff3c3cf2",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "Type of access token, currently only Bearer tokens are supported.\n<br><br>\nSample value:\n<br>\nBearer",
"type" : "string"
            },
            "expire" : {
            "readOnly" : false,
"description" : "The seconds left of the token life time.\n\n<br><br>\nSample value:\n<br> 3600",
"type" : "number"
            }
          },
      "example" : {
  "accessToken" : "...",
  "type" : "...",
  "expire" : 12345
},
      "description" : ""
    }
    ,
    "json_User" : {
      "type" : "object",
      "title" : "User",
          "properties" : {
            "userName" : {
            "readOnly" : false,
"description" : "A globally unique username that identifies a user.\n<br>\nRequired: yes",
"type" : "string"
            },
            "password" : {
            "readOnly" : false,
"description" : "Password for this user.\n<br>\nOnly available for add (POST) and update (PUT) requests.\n<br>\nStored in database using xxx one-way hash algorithm with key yyy and salt length ZZZ.\n<br>\nRequired: yes",
"type" : "string"
            },
            "email" : {
            "readOnly" : false,
"description" : "Email address for this user.\n<br>\nRequired: no",
"type" : "string"
            }
          },
      "example" : {
  "userName" : "...",
  "password" : "...",
  "email" : "..."
},
      "description" : ""
    }
    ,
    "json_Users" : {
      "type" : "object",
      "title" : "Users",
          "properties" : {
            "userName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "email" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "password" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "userName" : "...",
  "email" : "...",
  "password" : "..."
},
      "description" : ""
    }
  },
  "paths": {
    "\/users" : {
      "get" : {
        "tags" : [ "UsersFacadeREST" ],
        "description" : "",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_User"
}
            },
            "example" : {
  "userName" : "...",
  "password" : "...",
  "email" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "UsersFacadeREST" ],
        "description" : "",
        "operationId" : "create",
        "consumes" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_Users"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/users/count" : {
      "get" : {
        "tags" : [ "UsersFacadeREST" ],
        "description" : "",
        "operationId" : "countREST",
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/users/{from}/{to}" : {
      "get" : {
        "tags" : [ "UsersFacadeREST" ],
        "description" : "",
        "operationId" : "findRange",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "from",
            "in" : "path",
            "required" : true,
            "type" : "integer",
            "format" : "int32",
            "description" : ""
          },
          {
            "name" : "to",
            "in" : "path",
            "required" : true,
            "type" : "integer",
            "format" : "int32",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_User"
}
            },
            "example" : {
  "userName" : "...",
  "password" : "...",
  "email" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/{id}" : {
      "delete" : {
        "tags" : [ "UsersFacadeREST" ],
        "description" : "",
        "operationId" : "remove",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "UsersFacadeREST" ],
        "description" : "",
        "operationId" : "find",
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_User"
            },
            "example" : {
  "userName" : "...",
  "password" : "...",
  "email" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "UsersFacadeREST" ],
        "description" : "",
        "operationId" : "edit",
        "consumes" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_User"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/users/{userId}/tokens" : {
      "delete" : {
        "tags" : [ "TokenFacadeREST" ],
        "summary" : "Delete a previously created token.",
        "description" : "Delete a previously created token.",
        "operationId" : "deleteTokens",
        "parameters" : [
          {
            "name" : "userId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "TokenFacadeREST" ],
        "summary" : "Create a token to use for subsequent requests to this API.",
        "description" : "Create a token to use for subsequent requests to this API.\n<br>\nIf you do not have a user yet, please create one using the Users REST\nfacade (POST).\n<br>\nThe retrieved token SHOULD be stored by API client implementations.\n<br>\nClient implementations <b>MUST NOT<\/b> store the user username and\npassword.\n<br>\nAn API client can retrieve as many tokens as it likes, but server might\ndiscard old tokens to manage memory resources.\n<br>\n<br>\n<b>Authentication:<\/b> Basic Authentication (RFC 7617)",
        "operationId" : "createToken",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [
          {
            "name" : "userId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_Token"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_Token"
            },
            "example" : {
  "accessToken" : "...",
  "type" : "...",
  "expire" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/{userId}/tokens/{token-id}" : {
      "delete" : {
        "tags" : [ "TokenFacadeREST" ],
        "summary" : "Delete a previously created token.",
        "description" : "Delete a previously created token.",
        "operationId" : "deleteToken",
        "parameters" : [
          {
            "name" : "token-id",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : "The access token to delete, eg\n8758f65a-c27b-4f86-a43d-3ce1add36ec6\n<br>\n<b>Authentication:<\/b> Bearer Token"
          },
          {
            "name" : "userId",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
  }
}
